
Proba_4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000022a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  0000022a  0000029e  2**0
                  CONTENTS, ALLOC, LOAD, DATA

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e2       	ldi	r30, 0x2A	; 42
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a8 36       	cpi	r26, 0x68	; 104
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 09 01 	call	0x212	; 0x212 <main>
  7a:	0c 94 13 01 	jmp	0x226	; 0x226 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <_LCD_OutNibble>:
  82:	80 ff       	sbrs	r24, 0
  84:	02 c0       	rjmp	.+4      	; 0x8a <_LCD_OutNibble+0x8>
  86:	d8 9a       	sbi	0x1b, 0	; 27
  88:	01 c0       	rjmp	.+2      	; 0x8c <_LCD_OutNibble+0xa>
  8a:	d8 98       	cbi	0x1b, 0	; 27
  8c:	81 ff       	sbrs	r24, 1
  8e:	02 c0       	rjmp	.+4      	; 0x94 <_LCD_OutNibble+0x12>
  90:	d9 9a       	sbi	0x1b, 1	; 27
  92:	01 c0       	rjmp	.+2      	; 0x96 <_LCD_OutNibble+0x14>
  94:	d9 98       	cbi	0x1b, 1	; 27
  96:	82 ff       	sbrs	r24, 2
  98:	02 c0       	rjmp	.+4      	; 0x9e <_LCD_OutNibble+0x1c>
  9a:	da 9a       	sbi	0x1b, 2	; 27
  9c:	01 c0       	rjmp	.+2      	; 0xa0 <_LCD_OutNibble+0x1e>
  9e:	da 98       	cbi	0x1b, 2	; 27
  a0:	83 ff       	sbrs	r24, 3
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <_LCD_OutNibble+0x26>
  a4:	db 9a       	sbi	0x1b, 3	; 27
  a6:	08 95       	ret
  a8:	db 98       	cbi	0x1b, 3	; 27
  aa:	08 95       	ret

000000ac <_LCD_Write>:
  ac:	1f 93       	push	r17
  ae:	18 2f       	mov	r17, r24
  b0:	c1 9a       	sbi	0x18, 1	; 24
  b2:	82 95       	swap	r24
  b4:	8f 70       	andi	r24, 0x0F	; 15
  b6:	0e 94 41 00 	call	0x82	; 0x82 <_LCD_OutNibble>
  ba:	c1 98       	cbi	0x18, 1	; 24
  bc:	c1 9a       	sbi	0x18, 1	; 24
  be:	81 2f       	mov	r24, r17
  c0:	0e 94 41 00 	call	0x82	; 0x82 <_LCD_OutNibble>
  c4:	c1 98       	cbi	0x18, 1	; 24
  c6:	85 e8       	ldi	r24, 0x85	; 133
  c8:	8a 95       	dec	r24
  ca:	f1 f7       	brne	.-4      	; 0xc8 <_LCD_Write+0x1c>
  cc:	1f 91       	pop	r17
  ce:	08 95       	ret

000000d0 <LCD_WriteCommand>:
  d0:	c0 98       	cbi	0x18, 0	; 24
  d2:	0e 94 56 00 	call	0xac	; 0xac <_LCD_Write>
  d6:	08 95       	ret

000000d8 <LCD_WriteData>:
  d8:	c0 9a       	sbi	0x18, 0	; 24
  da:	0e 94 56 00 	call	0xac	; 0xac <_LCD_Write>
  de:	08 95       	ret

000000e0 <LCD_WriteText>:
  e0:	cf 93       	push	r28
  e2:	df 93       	push	r29
  e4:	ec 01       	movw	r28, r24
  e6:	03 c0       	rjmp	.+6      	; 0xee <LCD_WriteText+0xe>
  e8:	21 96       	adiw	r28, 0x01	; 1
  ea:	0e 94 6c 00 	call	0xd8	; 0xd8 <LCD_WriteData>
  ee:	88 81       	ld	r24, Y
  f0:	88 23       	and	r24, r24
  f2:	d1 f7       	brne	.-12     	; 0xe8 <LCD_WriteText+0x8>
  f4:	df 91       	pop	r29
  f6:	cf 91       	pop	r28
  f8:	08 95       	ret

000000fa <LCD_GoTo>:
  fa:	62 95       	swap	r22
  fc:	66 0f       	add	r22, r22
  fe:	66 0f       	add	r22, r22
 100:	60 7c       	andi	r22, 0xC0	; 192
 102:	68 0f       	add	r22, r24
 104:	86 2f       	mov	r24, r22
 106:	80 68       	ori	r24, 0x80	; 128
 108:	0e 94 68 00 	call	0xd0	; 0xd0 <LCD_WriteCommand>
 10c:	08 95       	ret

0000010e <LCD_Clear>:
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	0e 94 68 00 	call	0xd0	; 0xd0 <LCD_WriteCommand>
 114:	80 ea       	ldi	r24, 0xA0	; 160
 116:	9f e0       	ldi	r25, 0x0F	; 15
 118:	01 97       	sbiw	r24, 0x01	; 1
 11a:	f1 f7       	brne	.-4      	; 0x118 <LCD_Clear+0xa>
 11c:	08 95       	ret

0000011e <LCD_Home>:
 11e:	82 e0       	ldi	r24, 0x02	; 2
 120:	0e 94 68 00 	call	0xd0	; 0xd0 <LCD_WriteCommand>
 124:	80 ea       	ldi	r24, 0xA0	; 160
 126:	9f e0       	ldi	r25, 0x0F	; 15
 128:	01 97       	sbiw	r24, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <LCD_Home+0xa>
 12c:	08 95       	ret

0000012e <LCD_Initalize>:
 12e:	1f 93       	push	r17
 130:	cf 93       	push	r28
 132:	df 93       	push	r29
 134:	d0 9a       	sbi	0x1a, 0	; 26
 136:	d1 9a       	sbi	0x1a, 1	; 26
 138:	d2 9a       	sbi	0x1a, 2	; 26
 13a:	d3 9a       	sbi	0x1a, 3	; 26
 13c:	b9 9a       	sbi	0x17, 1	; 23
 13e:	b8 9a       	sbi	0x17, 0	; 23
 140:	80 e3       	ldi	r24, 0x30	; 48
 142:	95 e7       	ldi	r25, 0x75	; 117
 144:	01 97       	sbiw	r24, 0x01	; 1
 146:	f1 f7       	brne	.-4      	; 0x144 <LCD_Initalize+0x16>
 148:	c0 98       	cbi	0x18, 0	; 24
 14a:	c1 98       	cbi	0x18, 1	; 24
 14c:	10 e0       	ldi	r17, 0x00	; 0
 14e:	c0 e1       	ldi	r28, 0x10	; 16
 150:	d7 e2       	ldi	r29, 0x27	; 39
 152:	c1 9a       	sbi	0x18, 1	; 24
 154:	83 e0       	ldi	r24, 0x03	; 3
 156:	0e 94 41 00 	call	0x82	; 0x82 <_LCD_OutNibble>
 15a:	c1 98       	cbi	0x18, 1	; 24
 15c:	ce 01       	movw	r24, r28
 15e:	01 97       	sbiw	r24, 0x01	; 1
 160:	f1 f7       	brne	.-4      	; 0x15e <LCD_Initalize+0x30>
 162:	1f 5f       	subi	r17, 0xFF	; 255
 164:	13 30       	cpi	r17, 0x03	; 3
 166:	a9 f7       	brne	.-22     	; 0x152 <LCD_Initalize+0x24>
 168:	c1 9a       	sbi	0x18, 1	; 24
 16a:	82 e0       	ldi	r24, 0x02	; 2
 16c:	0e 94 41 00 	call	0x82	; 0x82 <_LCD_OutNibble>
 170:	c1 98       	cbi	0x18, 1	; 24
 172:	80 ed       	ldi	r24, 0xD0	; 208
 174:	97 e0       	ldi	r25, 0x07	; 7
 176:	01 97       	sbiw	r24, 0x01	; 1
 178:	f1 f7       	brne	.-4      	; 0x176 <LCD_Initalize+0x48>
 17a:	88 e2       	ldi	r24, 0x28	; 40
 17c:	0e 94 68 00 	call	0xd0	; 0xd0 <LCD_WriteCommand>
 180:	88 e0       	ldi	r24, 0x08	; 8
 182:	0e 94 68 00 	call	0xd0	; 0xd0 <LCD_WriteCommand>
 186:	81 e0       	ldi	r24, 0x01	; 1
 188:	0e 94 68 00 	call	0xd0	; 0xd0 <LCD_WriteCommand>
 18c:	80 ea       	ldi	r24, 0xA0	; 160
 18e:	9f e0       	ldi	r25, 0x0F	; 15
 190:	01 97       	sbiw	r24, 0x01	; 1
 192:	f1 f7       	brne	.-4      	; 0x190 <LCD_Initalize+0x62>
 194:	86 e0       	ldi	r24, 0x06	; 6
 196:	0e 94 68 00 	call	0xd0	; 0xd0 <LCD_WriteCommand>
 19a:	8c e0       	ldi	r24, 0x0C	; 12
 19c:	0e 94 68 00 	call	0xd0	; 0xd0 <LCD_WriteCommand>
 1a0:	df 91       	pop	r29
 1a2:	cf 91       	pop	r28
 1a4:	1f 91       	pop	r17
 1a6:	08 95       	ret

000001a8 <err>:
 1a8:	0f 93       	push	r16
 1aa:	1f 93       	push	r17
 1ac:	df 93       	push	r29
 1ae:	cf 93       	push	r28
 1b0:	cd b7       	in	r28, 0x3d	; 61
 1b2:	de b7       	in	r29, 0x3e	; 62
 1b4:	64 97       	sbiw	r28, 0x14	; 20
 1b6:	0f b6       	in	r0, 0x3f	; 63
 1b8:	f8 94       	cli
 1ba:	de bf       	out	0x3e, r29	; 62
 1bc:	0f be       	out	0x3f, r0	; 63
 1be:	cd bf       	out	0x3d, r28	; 61
 1c0:	0e 94 97 00 	call	0x12e	; 0x12e <LCD_Initalize>
 1c4:	0e 94 8f 00 	call	0x11e	; 0x11e <LCD_Home>
 1c8:	0e 94 87 00 	call	0x10e	; 0x10e <LCD_Clear>
 1cc:	80 e0       	ldi	r24, 0x00	; 0
 1ce:	60 e0       	ldi	r22, 0x00	; 0
 1d0:	0e 94 7d 00 	call	0xfa	; 0xfa <LCD_GoTo>
 1d4:	8e 01       	movw	r16, r28
 1d6:	0f 5f       	subi	r16, 0xFF	; 255
 1d8:	1f 4f       	sbci	r17, 0xFF	; 255
 1da:	c8 01       	movw	r24, r16
 1dc:	60 e6       	ldi	r22, 0x60	; 96
 1de:	70 e0       	ldi	r23, 0x00	; 0
 1e0:	0e 94 0c 01 	call	0x218	; 0x218 <strcpy>
 1e4:	c8 01       	movw	r24, r16
 1e6:	0e 94 70 00 	call	0xe0	; 0xe0 <LCD_WriteText>
 1ea:	80 e1       	ldi	r24, 0x10	; 16
 1ec:	97 e2       	ldi	r25, 0x27	; 39
 1ee:	28 ec       	ldi	r18, 0xC8	; 200
 1f0:	30 e0       	ldi	r19, 0x00	; 0
 1f2:	f9 01       	movw	r30, r18
 1f4:	31 97       	sbiw	r30, 0x01	; 1
 1f6:	f1 f7       	brne	.-4      	; 0x1f4 <err+0x4c>
 1f8:	01 97       	sbiw	r24, 0x01	; 1
 1fa:	d9 f7       	brne	.-10     	; 0x1f2 <err+0x4a>
 1fc:	64 96       	adiw	r28, 0x14	; 20
 1fe:	0f b6       	in	r0, 0x3f	; 63
 200:	f8 94       	cli
 202:	de bf       	out	0x3e, r29	; 62
 204:	0f be       	out	0x3f, r0	; 63
 206:	cd bf       	out	0x3d, r28	; 61
 208:	cf 91       	pop	r28
 20a:	df 91       	pop	r29
 20c:	1f 91       	pop	r17
 20e:	0f 91       	pop	r16
 210:	08 95       	ret

00000212 <main>:
 212:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <err>
 216:	fd cf       	rjmp	.-6      	; 0x212 <main>

00000218 <strcpy>:
 218:	fb 01       	movw	r30, r22
 21a:	dc 01       	movw	r26, r24
 21c:	01 90       	ld	r0, Z+
 21e:	0d 92       	st	X+, r0
 220:	00 20       	and	r0, r0
 222:	e1 f7       	brne	.-8      	; 0x21c <strcpy+0x4>
 224:	08 95       	ret

00000226 <_exit>:
 226:	f8 94       	cli

00000228 <__stop_program>:
 228:	ff cf       	rjmp	.-2      	; 0x228 <__stop_program>
