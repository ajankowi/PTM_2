
AVR-testowy.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000016a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00800060  0000016a  000001fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000082  00800072  00800072  00000210  2**0
                  ALLOC

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e6       	ldi	r30, 0x6A	; 106
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a2 37       	cpi	r26, 0x72	; 114
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a2 e7       	ldi	r26, 0x72	; 114
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a4 3f       	cpi	r26, 0xF4	; 244
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 96 00 	call	0x12c	; 0x12c <main>
  8a:	0c 94 b3 00 	jmp	0x166	; 0x166 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <appendSerial>:
  92:	90 91 73 00 	lds	r25, 0x0073
  96:	e9 2f       	mov	r30, r25
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	ec 58       	subi	r30, 0x8C	; 140
  9c:	ff 4f       	sbci	r31, 0xFF	; 255
  9e:	80 83       	st	Z, r24
  a0:	9f 5f       	subi	r25, 0xFF	; 255
  a2:	90 93 73 00 	sts	0x0073, r25
  a6:	97 ff       	sbrs	r25, 7
  a8:	02 c0       	rjmp	.+4      	; 0xae <appendSerial+0x1c>
  aa:	10 92 73 00 	sts	0x0073, r1
  ae:	08 95       	ret

000000b0 <ISR>:
  b0:	90 91 72 00 	lds	r25, 0x0072
  b4:	80 91 73 00 	lds	r24, 0x0073
  b8:	98 17       	cp	r25, r24
  ba:	79 f0       	breq	.+30     	; 0xda <ISR+0x2a>
  bc:	e9 2f       	mov	r30, r25
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	ec 58       	subi	r30, 0x8C	; 140
  c2:	ff 4f       	sbci	r31, 0xFF	; 255
  c4:	80 81       	ld	r24, Z
  c6:	8c b9       	out	0x0c, r24	; 12
  c8:	e9 2f       	mov	r30, r25
  ca:	ef 5f       	subi	r30, 0xFF	; 255
  cc:	e0 93 72 00 	sts	0x0072, r30
  d0:	e7 ff       	sbrs	r30, 7
  d2:	03 c0       	rjmp	.+6      	; 0xda <ISR+0x2a>
  d4:	ef 5f       	subi	r30, 0xFF	; 255
  d6:	e0 93 72 00 	sts	0x0072, r30
  da:	08 95       	ret

000000dc <serialWrite>:
  dc:	cf 93       	push	r28
  de:	df 93       	push	r29
  e0:	9c 01       	movw	r18, r24
  e2:	40 e0       	ldi	r20, 0x00	; 0
  e4:	12 c0       	rjmp	.+36     	; 0x10a <serialWrite+0x2e>
  e6:	80 91 73 00 	lds	r24, 0x0073
  ea:	e8 2f       	mov	r30, r24
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	ec 58       	subi	r30, 0x8C	; 140
  f0:	ff 4f       	sbci	r31, 0xFF	; 255
  f2:	c2 0f       	add	r28, r18
  f4:	d3 1f       	adc	r29, r19
  f6:	98 81       	ld	r25, Y
  f8:	90 83       	st	Z, r25
  fa:	8f 5f       	subi	r24, 0xFF	; 255
  fc:	80 93 73 00 	sts	0x0073, r24
 100:	87 ff       	sbrs	r24, 7
 102:	02 c0       	rjmp	.+4      	; 0x108 <serialWrite+0x2c>
 104:	10 92 73 00 	sts	0x0073, r1
 108:	4f 5f       	subi	r20, 0xFF	; 255
 10a:	c4 2f       	mov	r28, r20
 10c:	d0 e0       	ldi	r29, 0x00	; 0
 10e:	f9 01       	movw	r30, r18
 110:	01 90       	ld	r0, Z+
 112:	00 20       	and	r0, r0
 114:	e9 f7       	brne	.-6      	; 0x110 <serialWrite+0x34>
 116:	31 97       	sbiw	r30, 0x01	; 1
 118:	e2 1b       	sub	r30, r18
 11a:	f3 0b       	sbc	r31, r19
 11c:	ce 17       	cp	r28, r30
 11e:	df 07       	cpc	r29, r31
 120:	10 f3       	brcs	.-60     	; 0xe6 <serialWrite+0xa>
 122:	5d 99       	sbic	0x0b, 5	; 11
 124:	1c b8       	out	0x0c, r1	; 12
 126:	df 91       	pop	r29
 128:	cf 91       	pop	r28
 12a:	08 95       	ret

0000012c <main>:
 12c:	10 bc       	out	0x20, r1	; 32
 12e:	83 e3       	ldi	r24, 0x33	; 51
 130:	89 b9       	out	0x09, r24	; 9
 132:	88 e5       	ldi	r24, 0x58	; 88
 134:	8a b9       	out	0x0a, r24	; 10
 136:	86 e8       	ldi	r24, 0x86	; 134
 138:	80 bd       	out	0x20, r24	; 32
 13a:	80 e6       	ldi	r24, 0x60	; 96
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	0e 94 6e 00 	call	0xdc	; 0xdc <serialWrite>
 142:	87 e6       	ldi	r24, 0x67	; 103
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	0e 94 6e 00 	call	0xdc	; 0xdc <serialWrite>
 14a:	80 e2       	ldi	r24, 0x20	; 32
 14c:	9e e4       	ldi	r25, 0x4E	; 78
 14e:	28 ec       	ldi	r18, 0xC8	; 200
 150:	30 e0       	ldi	r19, 0x00	; 0
 152:	f9 01       	movw	r30, r18
 154:	31 97       	sbiw	r30, 0x01	; 1
 156:	f1 f7       	brne	.-4      	; 0x154 <main+0x28>
 158:	01 97       	sbiw	r24, 0x01	; 1
 15a:	d9 f7       	brne	.-10     	; 0x152 <main+0x26>
 15c:	8c e6       	ldi	r24, 0x6C	; 108
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	0e 94 6e 00 	call	0xdc	; 0xdc <serialWrite>
 164:	ff cf       	rjmp	.-2      	; 0x164 <main+0x38>

00000166 <_exit>:
 166:	f8 94       	cli

00000168 <__stop_program>:
 168:	ff cf       	rjmp	.-2      	; 0x168 <__stop_program>
